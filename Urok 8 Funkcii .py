"""
Задание №1

Написать функцию, которая в качестве аргумента принимает радиус круга. Радиус вводится пользователем с клавиатуры.
Функция считает площадь круга.
Формула площади круга:
S = pi * R^2
pi - константа 3.14
R - радиус

Функция возвращает значение площади.
"""

import math


def ploshad_kruga(r):
    s = math.pi * (r ** 2)
    return s


g = int(input('Введите радиус: '))
print(ploshad_kruga(g))

"""
Задание №2

Написать функцию, которая в качестве аргумента принимает целое число, введенное пользователем.
Функция возвращает количество четных цифр в числе и их сумму.
(задание с 3 урока)
"""


def func():
    count = 0
    summ = 0
    x = int(input('Введите целое число: '))
    while x > 0:
        a = x % 10
        if a % 2 == 0:
            count += 1
            summ += a
        x = x // 10
    print('Колличество четных цифр: ', count)
    print('Сумма четных цифр: ', summ)


func()

"""
Задание №3

Написать функцию, которая принимает в качестве аргумента целое число введенное пользователем.
Функция возвращает факториал числа, переданного в качестве аргумента.
Не использовать модуль math.
"""


def my_funk(num):  # определяем функцию с параметром
    i = 1  # переменная для перебора
    faktorial = 1  # переменная для факториала
    while i <= num:  # цикл для перебора чисел
        faktorial *= i  # считаем факториал
        i += 1  # увеличиваем счетчик
    return print(f'Факториал числа {num} равен {faktorial}')


g = int(input('Введите число,для расчета факториала: '))
my_funk(g)

"""
Задание №4

Написать функцию, которая в качестве аргумента принимает список.
(Список на 15 элементов, заполненный случайно сгенерированными числами от 1 до 30).
Функция должна возвращать отсортированный от большего к меньшего список, содержащий только четные значения.

P.S. Список сначала заполняется случайными числами. Преобразования должны происходить только внутри функции,
т.е. заполнить список сразу четными числами - не подходит.
"""
import random


def my_funkc(sp):  # определяем функцию
    new_spisok = []  # создаем пустой список
    for i in range(len(sp)):  # запускаем цикл перебора индексов
        if sp[i] % 2 == 0:  # проверяем четность элемента
            new_spisok.append(sp[i])  # если четный, то добавляем в наш список
        new_spisok.sort(reverse=True)  # сортируем список
        return new_spisok  # возвращаем отсортированный список ,который состоит из четных элементов


drugoy_spisok = []  # создаем пустой список
for i in range(0, 15):
    drugoy_spisok.append(random.randint(1, 30))
print(drugoy_spisok)
print(my_funkc(drugoy_spisok))

"""
Задание №5

Написать функцию, которая в качестве аргумента принимает список.
(Список на 20 элементов заполнен случайными целыми числами от 1 до 10)
Функция возвращает список, который содержит только уникальные элементы.
"""
import random


def my_fff(sp):  # определяем функцию с параметром
    novy_spisok = list(set(sp))  # преобразуем список в множество и еще раз в список,
    #так как множество не может содержать повторяющиеся элементы, то они удалятся и останутся только уникальные значения
    return novy_spisok


drugoy_spisok = []  # создаем пустой список
for i in range(20):  # запускаем цикл для заполнения списка
    drugoy_spisok.append(random.randint(1, 10))  # заполняем список
print(drugoy_spisok)  # печатаем наш список
print(my_fff(drugoy_spisok))  # выводим результат работы функции, которой передали наш список

"""
Задание №6

Написать функцию, которая принимает 1 аргумент (целое число) и определяет является ли данное число простым.
Число называется простым, если оно делится на 1 и на само себя.
Если число простое, то выводится соответствующее сообщение, что число является простым.
"""


def my_funkkkk(num):  # определяем функцию с параметром
    y = 0
    for i in range(1, num + 1):  # перебираем числа от 1 до введенного числа
        if num % i == 0:  # проверяем делится ли число без остатка
            y += 1  # если да, то увеличиваем счетчик
        if y > 2:  # проверяем сколько делителей есть если больше 2, то число не простое
            return print('Число не простое ')
        else:
            return print('Число простое')


t = int(input('Введите число: '))
my_funkkkk(t)
