"""Задание №1

Имеется функция, которая считает количество четных цифр в введенном числе.
В основном коде программы, мы запрашиваем у пользователя число.
В случае, если пользователь вводит символ, то программа выдает ошибку.
Необходимо добавить обработку исключения: если пользователь вводит не число, то должно выводиться сообщение:
"Введенные данные не верные"
"""


def my_f(num):  # Определяем функцию с параметром
    k = 0  # определяем счетчик
    s = 0  # определяем переменную суммы
    while num > 0:  # запускаем цикл пока наше число больше 0
        tm1 = num % 10  # отрезаем последнюю цифру
        if tm1 % 2 == 0:  # проверяем цифру на четность
            k += 1  # если четное, то увеличиваем счетчик и сумму
            s += tm1
        num //= 10  # убираем последнюю цифру числа
    return print(f"Количество четных цифр {k} \nСумма четных цифр {s}")  # возвращаем результат работы функции


#nm = int(input('Введите число: '))  # Запрашиваем число
#my_f(nm)  # вызываем функцию с введенным аргументом

try:
    nm = int(input('Введите число: '))
except ValueError:
    print('Введенные данные не верные')
else:
    my_f(nm)



"""
Задание 2
Внизу приведен код. При его работе может возникать ошибка деления на ноль.
Необходимо написать обработчик исключения, так чтобы при делении на ноль выводилось сообщение:
"Нам попался НОЛЬ"
"""

import random


def my_f():
    for i in range(10):
        try:
            d = i / random.randint(0, 10)
        except ZeroDivisionError:
            print('Упс,нам попался НОЛЬ')
        else:
            print(d)


my_f()

"""
Задание №3

Написать программу, которая запрашивает у пользователя 10 слов и помещает их в список.
НО если пользователь ввел слово end,программа должна вызвать принудительно исключение TypeError с сообщением 
"Тут мы и завершим работу".
"""

spisok= []

for i in range(10):
    try:
        t = input('Введите слово: ')
        if t.lower() == 'end':
            raise TypeError
    except TypeError:
        print('Тут мы и остановимся')
        break
    else:
        spisok.append(t)

print(spisok)


"""
Задание №4

Возьмем код из урока про файлы. Мы запрашиваем у пользователя имя файла, который нужно открыть для чтения.
Но пользователь может неверно ввести имя файла и, соответственно, он не откроется.
Необходимо дополнить код обработкой такого исключения.
"""

def my_f(nam, mod): # определяем функцию

    try:
        with open(nam, mod, encoding='utf-8') as fl:  # открываем файл
            txt = fl.read()  # считываем все из файла и помещаем в переменную
            txt = txt.replace('\n', ' ')  # меняем все переходы на новую строку на простой пробел
            txt = txt.replace('  ', ' ')  # меняем двойные пробелы если такие есть на одиночный
            sp = []  # создаем пустой список
            sp = txt.split()  # создаем список из текста
            for i in range(len(sp)-1, -1, -1):  # перебираем список
                if len(sp[i])==1:  #  проверяем элементы длиной в 1 символ
                    if not sp[i].isalpha():  # проверяем если это не символ, то удаляем его
                        del sp[i]
    except FileNotFoundError:
        print('Такого файла нет')
    else:
        return print(f'Количество слов в файле: {len(sp)}')  # выводим длину списка

my_f(input('Введите имя файла: '), 'r')  # вызов функции




"""
Задание №5

За основу возьмем задание из урока Словари.
Создать словарь, в котором в качестве ключа содержится номер студенческого билета
(номер билета трехзначный т.е. от 0 до 999),
а в качестве значения содержится строка с именем и фамилией.
Заполняется словарь вводом с клавиатуры, номер билета генерируется случайно,
но проверяется чтобы он не использовался в словаре.
Заполнить словарь 10 элементами

Имеется такой код программы.
Необходимо изменить код так, чтобы цикл был не на 10 повторений, а бесконечный.
Создать собственное исключение EndError.
Если при вводе имени и фамилии пользователь указывает EXIT (большими или маленькими буквами или вообще буквами с разным регистром) , то будет вызываться созданное нами исключение.
Внутри исключения у нас будет вывод сообщения:
"Ну вот мы и остановились. Тут и завершим"
И после должен быть вывод словаря, что у нас получился.

"""
import random
class MyError(Exception):
    def __init__(self):
        print('Ну вот тут мы и остановимся!!!')

slovar = {}  # Создаем пустой словарь

i = 0
while True:  # бесконечный цикл
    j = random.randint(0, 999)
    if j in slovar.keys():  # проверяем,есть ли такой ключ в словаре
        j = random.randint(0, 999)  # если есть,то генерируем снова
    else:
        try:
            r = input('Введите Имя и Фамилию студента: ')
            if r.lower() == 'exit':
                raise MyError
        except:
            break
        else:
            slovar[j] = r  # добавляем пару ключ/значение в словать
            i += 1  # увелициваем цикл
print(slovar)  # выводим наш словарь



